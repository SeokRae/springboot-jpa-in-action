buildscript {
    ext {
        springBootVersion = '2.3.4.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }  /* QueryDSL 로 인해 추가 */
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10"   /* QueryDSL 로 인해 추가 */
    }
}


subprojects {

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    group 'kr.seok'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        /* Web */
        implementation 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        /* Jpa */
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        /* db (jpa 설정 시 기본 db가 존재해야 함 */
        runtimeOnly 'com.h2database:h2'

        /* lombok */
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

    }

    clean {
        delete 'out'
    }

}

project(":springboot-jpa-shop") {
    dependencies {

        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            /* JUnit 5를 사용하는 경우 Junit4 내용을 제거해줘야 함, (이하 버전 사용하려는 경우 주석처리) */
//            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}
project(":springboot-jpa-shop-optimize") {
    /* QueryDSL 로 인해 추가 */
    apply plugin: "com.ewerk.gradle.plugins.querydsl"

    dependencies {
        /* entity lazyloading 해결을 위해서 해당 모듈을 등록하는것 잘못된 해결법 */
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // QueryDSL
        implementation 'com.querydsl:querydsl-jpa'
        implementation 'com.querydsl:querydsl-apt'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            /* JUnit 5를 사용하는 경우 Junit4 내용을 제거해줘야 함, (이하 버전 사용하려는 경우 주석처리) */
//            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    //querydsl 추가
    //def querydslDir = 'src/main/generated'
    def querydslDir = "$buildDir/generated/querydsl"
    querydsl {
        library = "com.querydsl:querydsl-apt"
        jpa = true
        querydslSourcesDir = querydslDir
    }
    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', querydslDir]
            }
        }
    }
    compileQuerydsl{
        options.annotationProcessorPath = configurations.querydsl
    }
    configurations {
        querydsl.extendsFrom compileClasspath
    }
}

project(":springboot-jpa-data") {
    dependencies {
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            /* JUnit 5를 사용하는 경우 Junit4 내용을 제거해줘야 함, (이하 버전 사용하려는 경우 주석처리) */
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
    /* JUnit5를 사용하는 경우 설정 */
    test {
        useJUnitPlatform()
    }
}

project(":springboot-jpa-querydsl") {
    dependencies {

    }
}
